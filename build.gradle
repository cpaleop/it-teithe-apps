// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.4.10"
    ext.nav_version = '2.3.0-alpha06'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:${nav_version}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}
// Appends the following properties to each module to maintain everything in one place.
subprojects {
    afterEvaluate { project ->
        if (project.hasProperty('android')) {
            android {
                compileSdkVersion 29
                buildToolsVersion "29.0.3"

                defaultConfig {
                    minSdkVersion 21
                    targetSdkVersion 29
                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                    vectorDrawables.useSupportLibrary = true
                    versionCode 1001
                    versionName "1.0.01"
                }

                signingConfigs {
                    release {
                        //shrinkResources true
                        storeFile file('keystore/keystore')
                        keyAlias 'key0'
                        storePassword 'ieeapps!@#$'
                        keyPassword 'ieeapps!@#$'
                    }

                    debug {
                        /*storeFile file('keystore/debug.keystore')*/
                        /*keyAlias 'key0'
                        storePassword 'ieeapps!@#$'
                        keyPassword 'ieeapps!@#$'*/
                    }
                }

                buildFeatures {
                    viewBinding = true
                }

                flavorDimensions "env"
                productFlavors {
                    dEV {
                        signingConfig signingConfigs.debug
                        buildConfigField "String", "CLIENT_ID", '"5bd3ab44ae4ff2273941c011"'
                        buildConfigField "String", "CLIENT_SECRET", '"1q1e6piho2rvwt1cdzfcc3bs8urfh5i9j3x7wcyy5y6uyxqc96"'
                        buildConfigField "String", "CALLBACK_URL", '"appsservice://callback"'
                        buildConfigField "String", "LOGIN_URL", '"https://login.it.teithe.gr/"'
                        buildConfigField "String", "BASE_URL", '"https://api.it.teithe.gr/"'
                    }

                    pROD {
                        signingConfig signingConfigs.release
                        buildConfigField "String", "CLIENT_ID", '"5bd3ab44ae4ff2273941c011"'
                        buildConfigField "String", "CLIENT_SECRET", '"1q1e6piho2rvwt1cdzfcc3bs8urfh5i9j3x7wcyy5y6uyxqc96"'
                        buildConfigField "String", "CALLBACK_URL", '"appsservice://callback"'
                        buildConfigField "String", "LOGIN_URL", '"https://login.it.teithe.gr/"'
                        buildConfigField "String", "BASE_URL", '"https://api.it.teithe.gr/"'
                    }
                }

                android.variantFilter { variant ->
                    if (variant.buildType.name == 'release' && variant.getFlavors().get(0).name == 'dEV') {
                        variant.setIgnore(true)
                    } else if (variant.buildType.name == 'debug' && variant.getFlavors().get(0).name == 'pROD') {
                        variant.setIgnore(true)
                    }
                }

                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }

                tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
                    kotlinOptions {
                        jvmTarget = "1.8"
                    }
                }
            }
        }
    }

    tasks.withType(Test) {
        maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}